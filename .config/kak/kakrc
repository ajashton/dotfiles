## EDITING ##

set-option global indentwidth 4
set-option global tabstop 4

set-option global ui_options
set-option -add global ui_options terminal_assistant=clippy
set-option -add global ui_options terminal_padding_char=·
set-option -add global ui_options terminal_set_title=false

map global normal <c-/> ': comment-line<ret>'
map global insert <s-backspace> '<backspace>'


## VISUAL ##

# display line numbers
#add-highlighter global/ number-lines -hlcursor

# highlight trailing whitespace
add-highlighter global/ regex \h+$ 0:Error

# soft wrap long lines
add-highlighter global/ wrap -word -indent


## REGISTERS ##

# when the contents of the default register change
# copy them to the system clipboard as well
hook global RegisterModified '"' %{ nop %sh{
    printf %s "$kak_main_reg_dquote" | xclip -in -selection clipboard<ret>
}}


## LINTING ##

# hook global WinSetOption filetype=python %{
#     # set lint command to run both mypy and pylint, and operate
#     # on the *actual* file, not the tmp file created by lint.kak.
#     set-option window lintcmd 'pylint --score=n $kak_buffile'
# }

hook global WinSetOption filetype=sh %{
    set-option window lintcmd 'shellcheck --format=gcc'
}

hook global WinSetOption filetype=(python|sh) %{
    # lint immediately when loading a file
    lint-buffer
    # lint after writing a file
    hook buffer BufWritePost .* %{
        lint-buffer
    }
}


## PLUGINS ##

# plug.kak - plugin manager
source "%val{config}/plugins/plug.kak/rc/plug.kak"
plug "andreyorst/plug.kak" noload

# kak-lsp - language server
plug "kak-lsp/kak-lsp" do %{
    cargo install --locked --force --path .
} config %{
    hook global WinSetOption filetype=(c|cpp|javascript|json|python|rust|sh|yaml) %{
        lsp-enable-window
        #lsp-auto-hover-enable
        #lsp-auto-hover-insert-mode-disable

        set-option window lsp_diagnostic_line_error_sign "!"
        set-option window lsp_diagnostic_line_warning_sign "?"

        set-option window lsp_auto_highlight_references true
        set-option window lsp_hover_anchor true

        set-face window DiagnosticError default+u
        set-face window DiagnosticWarning default+u

        map window normal <F1> ': lsp-hover<ret>'
        map window normal <F2> ': lsp-rename-prompt<ret>'
        map window normal <F3> ': lsp-references<ret>'
        map window normal <F7> ': lsp-definition<ret>'
        map window normal <F12> ': lsp-highlight-references<ret>'
    }
}

# fzf.kak
plug "andreyorst/fzf.kak" config %{
    map global normal <c-p> ': fzf-mode<ret>'
} defer fzf-file %{
    set-option global fzf_file_command 'rg --files --hidden -g "!.git/*"'
}

# auto-pairs.kak
# plug "alexherbo2/auto-pairs.kak" config % {
#     set-option global auto_pairs ( ) '{' '}' [ ] '"' '"' "'" "'" ` ` “ ” ‘ ’ « » ‹ ›
#     enable-auto-pairs
# }

# smarttab.kak
plug "andreyorst/smarttab.kak" defer smarttab %{
    # when `backspace' is pressed, 4 spaces are deleted at once
    set-option global softtabstop 4
} config %{
    # expandtab: always insert spaces
    hook global WinSetOption filetype=(rust|markdown|kak|lisp|scheme|sh|perl) expandtab
    # noexpandtab: always insert tabs
    hook global WinSetOption filetype=(makefile|gas) noexpandtab
    # smarttab: tabs for indentation, spaces for alignment
    hook global WinSetOption filetype=(c|cpp) smarttab
}

